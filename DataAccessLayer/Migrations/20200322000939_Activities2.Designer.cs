// <auto-generated />
using System;
using DataAccessLayer.Repositories.Impls.Ral;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(RalDbContext))]
    [Migration("20200322000939_Activities2")]
    partial class Activities2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataAccessLayer.Entities.AccountBalanceRecordEntity", b =>
                {
                    b.Property<int?>("SN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BalanceDebt")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Debt")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("Doc1Sn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Doc2Sn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Memo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerSn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("SN");

                    b.ToTable("AccountBalanceRecords");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Address", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Apartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Block")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAtStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Authentication.IdentityUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IdentityUsers");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Authentication.RefreshToken", b =>
                {
                    b.Property<string>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsInvalidated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("JwtId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Key");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.BusinessPartners.Activity", b =>
                {
                    b.Property<int?>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<int?>("BaseActivity")
                        .HasColumnType("int");

                    b.Property<DateTime>("BeginDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("BusinessPartnerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Document")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<int?>("HandleByEmployeeCode")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubjectCode")
                        .HasColumnType("int");

                    b.Property<int>("TypeCode")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.BusinessPartners.ActivitySubject", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeCode")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.ToTable("ActivitySubjects");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.BusinessPartners.ActivityType", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("ActivityTypes");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.BusinessPartners.BusinessPartner", b =>
                {
                    b.Property<string>("Cid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("BillingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cellular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DeliveryNotesBalance")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FederalTaxId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeoLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupSn")
                        .HasColumnType("int");

                    b.Property<string>("IndicatorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IndustryCode")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFavorite")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsVatFree")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OrdersBalance")
                        .HasColumnType("decimal(10,3)");

                    b.Property<int?>("PartnerType")
                        .HasColumnType("int");

                    b.Property<string>("Phone1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SalesmanCode")
                        .HasColumnType("int");

                    b.Property<string>("ShippingAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Cid");

                    b.ToTable("BusinessPartners");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.BusinessPartners.CardGroup", b =>
                {
                    b.Property<int>("Sn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Sn");

                    b.ToTable("CardGroups");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.BusinessPartners.Indicator", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("CardIndicators");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.BusinessPartners.Industry", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("CardIndustries");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.CompanyEntity", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BankAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FederalTaxID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manager")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("VatPercent")
                        .HasColumnType("decimal(3,2)");

                    b.Property<string>("WebSite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.HasIndex("AddressID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Department", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Documents.CreditNoteEntity", b =>
                {
                    b.Property<int?>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerFederalTaxId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerSn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("decimal(3,2)");

                    b.Property<decimal?>("DocTotal")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("ExternalSn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("GrossProfit")
                        .HasColumnType("decimal(10,3)");

                    b.Property<bool?>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<string>("Items")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OwnerEmployeeSn")
                        .HasColumnType("int");

                    b.Property<int?>("SalesmanSn")
                        .HasColumnType("int");

                    b.Property<int?>("Sn")
                        .HasColumnType("int");

                    b.Property<decimal?>("ToPay")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("TotalDiscountAndRounding")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("Vat")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("VatPercent")
                        .HasColumnType("decimal(3,2)");

                    b.HasKey("Key");

                    b.ToTable("CreditNotes");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Documents.DeliveryNoteEntity", b =>
                {
                    b.Property<int?>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerFederalTaxId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerSn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("decimal(3,2)");

                    b.Property<decimal?>("DocTotal")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("ExternalSn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("GrossProfit")
                        .HasColumnType("decimal(10,3)");

                    b.Property<bool?>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<string>("Items")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OwnerEmployeeSn")
                        .HasColumnType("int");

                    b.Property<int?>("SalesmanSn")
                        .HasColumnType("int");

                    b.Property<int?>("Sn")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SupplyDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ToPay")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("TotalDiscountAndRounding")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("Vat")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("VatPercent")
                        .HasColumnType("decimal(3,2)");

                    b.HasKey("Key");

                    b.ToTable("DeliveryNotes");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Documents.DownPaymentRequest", b =>
                {
                    b.Property<int?>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerFederalTaxId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerSn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("decimal(3,2)");

                    b.Property<decimal?>("DocTotal")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("ExternalSn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("GrossProfit")
                        .HasColumnType("decimal(10,3)");

                    b.Property<bool?>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OwnerEmployeeSn")
                        .HasColumnType("int");

                    b.Property<int?>("SalesmanSn")
                        .HasColumnType("int");

                    b.Property<int?>("Sn")
                        .HasColumnType("int");

                    b.Property<decimal?>("ToPay")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("TotalDiscountAndRounding")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("Vat")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("VatPercent")
                        .HasColumnType("decimal(3,2)");

                    b.HasKey("Key");

                    b.ToTable("DownPaymentRequests");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Documents.InvoiceEntity", b =>
                {
                    b.Property<int?>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerFederalTaxId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerSn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("decimal(3,2)");

                    b.Property<decimal?>("DocTotal")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("ExternalSn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("GrossProfit")
                        .HasColumnType("decimal(10,3)");

                    b.Property<bool?>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<string>("Items")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OwnerEmployeeSn")
                        .HasColumnType("int");

                    b.Property<int?>("SalesmanSn")
                        .HasColumnType("int");

                    b.Property<int?>("Sn")
                        .HasColumnType("int");

                    b.Property<decimal?>("ToPay")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("TotalDiscountAndRounding")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("Vat")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("VatPercent")
                        .HasColumnType("decimal(3,2)");

                    b.HasKey("Key");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Documents.Items.DocItemEntity", b =>
                {
                    b.Property<long>("DocKey")
                        .HasColumnType("bigint");

                    b.Property<int?>("ItemNumber")
                        .HasColumnType("int");

                    b.Property<string>("BaseDoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BaseItemNumber")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(3,2)");

                    b.Property<int?>("DownPaymentRequestKey")
                        .HasColumnType("int");

                    b.Property<string>("FollowDoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("bit");

                    b.Property<decimal>("OpenQuantity")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal>("PricePerQuantity")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(10,3)");

                    b.Property<int>("VisualOrder")
                        .HasColumnType("int");

                    b.HasKey("DocKey", "ItemNumber");

                    b.HasIndex("DownPaymentRequestKey");

                    b.ToTable("DocItemEntity");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Documents.OrderEntity", b =>
                {
                    b.Property<int?>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerFederalTaxId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerSn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("decimal(3,2)");

                    b.Property<decimal?>("DocTotal")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("ExternalSn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("GrossProfit")
                        .HasColumnType("decimal(10,3)");

                    b.Property<bool?>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<string>("Items")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OwnerEmployeeSn")
                        .HasColumnType("int");

                    b.Property<int?>("SalesmanSn")
                        .HasColumnType("int");

                    b.Property<int?>("Sn")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SupplyDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ToPay")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("TotalDiscountAndRounding")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("Vat")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("VatPercent")
                        .HasColumnType("decimal(3,2)");

                    b.HasKey("Key");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Documents.QuotationEntity", b =>
                {
                    b.Property<int?>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerFederalTaxId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerSn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("decimal(3,2)");

                    b.Property<decimal?>("DocTotal")
                        .HasColumnType("decimal(10,3)");

                    b.Property<string>("ExternalSn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("GrossProfit")
                        .HasColumnType("decimal(10,3)");

                    b.Property<bool?>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<string>("Items")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OwnerEmployeeSn")
                        .HasColumnType("int");

                    b.Property<int?>("SalesmanSn")
                        .HasColumnType("int");

                    b.Property<int?>("Sn")
                        .HasColumnType("int");

                    b.Property<decimal?>("ToPay")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("TotalDiscountAndRounding")
                        .HasColumnType("decimal(10,3)");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Vat")
                        .HasColumnType("decimal(10,3)");

                    b.Property<decimal?>("VatPercent")
                        .HasColumnType("decimal(3,2)");

                    b.HasKey("Key");

                    b.ToTable("Quotations");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.EmployeeEntity", b =>
                {
                    b.Property<int>("Sn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentCode")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("HomeAddressForeignKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HomePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManagerSN")
                        .HasColumnType("int");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PicPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PositionCode")
                        .HasColumnType("int");

                    b.Property<int?>("SalesmanSN")
                        .HasColumnType("int");

                    b.Property<string>("WorkAddressForeignKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WorkCellular")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Sn");

                    b.HasIndex("DepartmentCode");

                    b.HasIndex("HomeAddressForeignKey");

                    b.HasIndex("PositionCode");

                    b.HasIndex("WorkAddressForeignKey");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.EmployeeTimeClock", b =>
                {
                    b.Property<long?>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CheckIn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CheckInLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("CheckOut")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CheckOutLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeSn")
                        .HasColumnType("int");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("EmployeeTimeClocks");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.JobPosition", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("JobPosition");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Products.ProductEntity", b =>
                {
                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AutoQuantityCalculationExpression")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuyPriceList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupCode")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsForBuy")
                        .HasColumnType("bit");

                    b.Property<bool>("IsForSell")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameForeign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Properties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SellPriceList")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Products.ProductGroupEntity", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("ProductGroups");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.SalesmanEntity", b =>
                {
                    b.Property<int>("Sn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActiveStatus")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Sn");

                    b.ToTable("Salesmen");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.UserData.LeadUserData", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LeadSn")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "LeadSn");

                    b.ToTable("LeadUserData");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.UserLocation", b =>
                {
                    b.Property<long?>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeSn")
                        .HasColumnType("int");

                    b.Property<int?>("ErrorCode")
                        .HasColumnType("int");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.HasKey("Key");

                    b.ToTable("UserLocations");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.CompanyEntity", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Documents.Items.DocItemEntity", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Documents.DownPaymentRequest", null)
                        .WithMany("Items")
                        .HasForeignKey("DownPaymentRequestKey");
                });

            modelBuilder.Entity("DataAccessLayer.Entities.EmployeeEntity", b =>
                {
                    b.HasOne("DataAccessLayer.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentCode");

                    b.HasOne("DataAccessLayer.Entities.Address", "HomeAddress")
                        .WithMany()
                        .HasForeignKey("HomeAddressForeignKey");

                    b.HasOne("DataAccessLayer.Entities.JobPosition", "Position")
                        .WithMany()
                        .HasForeignKey("PositionCode");

                    b.HasOne("DataAccessLayer.Entities.Address", "WorkAddress")
                        .WithMany()
                        .HasForeignKey("WorkAddressForeignKey");
                });
#pragma warning restore 612, 618
        }
    }
}
